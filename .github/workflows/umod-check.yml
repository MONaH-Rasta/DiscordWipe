name: Check uMod Plugin Updates

on:
  schedule:
    - cron: '0 0 * * *' # Check every day at midnight (UTC)
  workflow_dispatch: # Allow manual trigger

jobs:
  check-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch current plugin file from uMod
        id: fetch_plugin
        run: |
          # Downloading the latest plugin file
          UMOD_API_URL="https://umod.org/plugins/discord-wipe.json"
          response=$(curl -s $UMOD_API_URL)
          download_url=$(echo "$response" | jq -r '.download_url')
          curl -o DiscordWipe.cs "$download_url"

      - name: Extract version from file
        id: extract_version
        run: |
          # Extract the version from the Info attribute in the file
          plugin_version=$(grep -Po '(?<=\[Info\("[^"]+", "[^"]+", ")[^"]+' DiscordWipe.cs)
          echo "Plugin version in file: $plugin_version"
          echo "plugin_version=$plugin_version" >> $GITHUB_ENV

      - name: Get latest GitHub release version
        id: get_latest_release
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          current_version=${latest_tag#v}

          echo "Latest GitHub release version: $current_version"
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Compare versions
        run: |
          current_version="${{ env.current_version }}"
          plugin_version="${{ env.plugin_version }}"

          echo "Current version in repo: $current_version"
          echo "Latest version in plugin file: $plugin_version"
          
          if [ "$current_version" != "$plugin_version" ]; then
            echo "New version found: $plugin_version"
            echo "new_version=true" >> $GITHUB_ENV
          else
            echo "No new version"
            echo "new_version=false" >> $GITHUB_ENV

      - name: Commit and push new version
        if: env.new_version == 'true'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add DiscordWipe.cs
          git commit -m "v${{ env.plugin_version }}"
          git push

      - name: Create GitHub release
        if: env.new_version == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ env.plugin_version }}" DiscordWipe.cs \
            --title "DiscordWipe v${{ env.plugin_version }}" \
            --notes "Automatic release of new version from the plugin file."
